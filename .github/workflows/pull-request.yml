name: PR build
permissions:
  contents: "write"
  id-token: "write"
  packages: "write"
on: [ pull_request ]

env:
  IMAGE: docker.pkg.github.com/${{ github.repository }}/medlemskap-dataprodukter:${{ github.sha }}
jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      checks: write
    steps:
      - name: Checkout
        uses: actions/checkout@master
      - name: Cache
        uses: actions/cache@v1.1.2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle.kts') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: test and build
        uses: actions/setup-java@v4.2.1
        with:
          distribution: 'adopt'
          java-version: '20'
          check-latest: true
      - run: ./gradlew test shadowJar
        env:
          ORG_GRADLE_PROJECT_githubUser: x-access-token
          ORG_GRADLE_PROJECT_githubPassword: ${{ secrets.GITHUB_TOKEN }}
      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v3
        if: success() || failure() # always run even if the previous step fails
        with:
          report_paths: '**/build/test-results/test/TEST-*.xml'
      - name: Build docker image
        run: docker build -t $IMAGE .
      - name: Login to Github package registry
        run: docker login docker.pkg.github.com -u ${GITHUB_REPOSITORY} -p ${GITHUB_TOKEN}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Push docker image
        run: docker push $IMAGE
      - name: Post failures to Slack
        if: failure()
        run: |
          curl -X POST --data-urlencode "payload={\"channel\": \"$CHANNEL\", \"text\": \"$MESSAGE\", \"icon_emoji\": \":ghost:\"}" $WEBHOOK_URL
        env:
          MESSAGE: "Bygg feilet"
          CHANNEL: "#team-p3-medlemskap-notifications"
          WEBHOOK_URL: ${{ secrets.WEBHOOK_URL }}
      - name: Generate and submit dependency graph
        uses: gradle/actions/dependency-submission@0bdd871935719febd78681f197cd39af5b6e16a6
    outputs:
      image: ${{ steps.docker-push.outputs.image }}
  deploypreprod:
    name: Deploy to Preprod
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - uses: nais/deploy/actions/deploy@v1
      env:
        APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
        CLUSTER: dev-gcp
        RESOURCE: .nais/nais.yaml
        VAR: image=${{ env.IMAGE }}
    - name: Dispatch trivy scan
      if: success()
      env:
        GH_TOKEN: ${{ github.token }}
      run: |
          gh api --method POST repos/${{ github.repository }}/dispatches \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            -f event_type=start-trivy \
            -f client_payload='{"image": "${{ steps.docker-push.outputs.image }}"}'
