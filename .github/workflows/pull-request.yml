name: build
permissions:
  contents: "write"
  id-token: "write"
  packages: "write"
on: [ pull_request ]

env:
  IMAGE: ghcr.io/${{ github.repository }}:${{ github.sha }}
jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: test and build
        uses: actions/setup-java@v4.2.1
        with:
          distribution: 'temurin'
          java-version: '20'
          check-latest: true
      - run: ./gradlew test shadowJar
        env:
          ORG_GRADLE_PROJECT_githubUser: x-access-token
          ORG_GRADLE_PROJECT_githubPassword: ${{ secrets.GITHUB_TOKEN }}
      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v3
        if: success() || failure() # always run even if the previous step fails
        with:
            report_paths: '**/build/test-results/test/TEST-*.xml'
      - uses: nais/docker-build-push@v0
        id: docker-push
        with:
          team: medlemskap # required
          project_id: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }} # required, but is defined as an organization variable
          identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }} # required, but is defined as an organization secret
      - name: Post failures to Slack
        if: failure()
        run: |
          curl -X POST --data-urlencode "payload={\"channel\": \"$CHANNEL\", \"text\": \"$MESSAGE\", \"icon_emoji\": \":ghost:\"}" $WEBHOOK_URL
        env:
          MESSAGE: "Bygg feilet."
          CHANNEL: "#team-p3-medlemskap-notifications"
          WEBHOOK_URL: ${{ secrets.WEBHOOK_URL }}
      - name: Generate and submit dependency graph
        uses: gradle/actions/dependency-submission@0bdd871935719febd78681f197cd39af5b6e16a6
    outputs:
      image: ${{ steps.docker-push.outputs.image }}

  trivy:
    runs-on: ubuntu-latest
    needs: build_and_push
    permissions:
      contents: write # to write sarif
      security-events: write # push sarif to github security
      id-token: write # for nais/login
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # ratchet:actions/checkout@v4
        with:
          persist-credentials: false
      - uses: nais/login@4ce7445c84f09114e481a1d2c164f563e9e2ba8e # ratchet:nais/login@v0
        with:
          project_id: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}
          identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }}
          team: medlemskap
      - uses: aquasecurity/trivy-action@18f2510ee396bbf400402947b394f2dd8c87dbb0 # ratchet:aquasecurity/trivy-action@master
        env:
          TRIVY_JAVA_DB_REPOSITORY: public.ecr.aws/aquasecurity/trivy-java-db
        with:
          image-ref: '${{ needs.build_and_push.outputs.image }}'
          format: 'sarif'
          output: 'trivy.sarif'
      - uses: github/codeql-action/upload-sarif@b6a472f63d85b9c78a3ac5e89422239fc15e9b3c # ratchet:github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy.sarif'
          category: appsec-stats

  deploypreprod:
    name: Deploy to Preprod
    needs: build_and_push
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: nais/deploy/actions/deploy@v2
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-gcp
          RESOURCE: .nais/nais.yaml
          IMAGE: ${{ needs.build_and_push.outputs.image }}
          TELEMETRY: ${{ needs.build_and_push.outputs.telemetry }}

